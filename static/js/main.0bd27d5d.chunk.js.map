{"version":3,"sources":["pexels-rostislav-uzunov-5680034.mp4","App.js","reportWebVitals.js","index.js"],"names":["AnyReactComponent","text","style","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","App","defaultProps","center","lat","lng","zoom","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Container","Navbar","className","expand","NavbarBrand","href","options","height","width","Col","xs","sm","md","lg","NavItem","Button","Row","bootstrapURLKeys","key","defaultCenter","defaultZoom","opacity","muted","src","video","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAAe,MAA0B,4D,OCSnCA,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxB,qBAAKC,MAAO,CACVC,MAAO,QACPC,WAAY,OACZC,QAAS,YACTC,QAAS,cACTC,UAAW,SACXC,WAAY,SACZC,eAAgB,SAChBC,aAAc,OACdC,UAAW,yBATb,SAWGV,KAmFUW,MA/Ef,WACE,IAAMC,EAAe,CACnBC,OAAQ,CACNC,IAAK,QACLC,KAAM,UAERC,KAAM,GAIFC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,mBAIzB,OACE,gCACE,8BACE,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAQC,UAAU,QAAQC,OAAO,KAAjC,UAEE,cAACC,EAAA,EAAD,CAAaF,UAAU,WAAWG,KAAK,IAAvC,iCACA,qBAAKH,UAAU,YAAf,SACE,cAAC,IAAD,CACEI,QAASZ,EACTa,OAAQ,IACRC,MAAO,QAGX,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,UACA,cAACC,EAAA,EAAD,CAASZ,UAAU,WAAnB,SACE,cAACa,EAAA,EAAD,CAAQb,UAAU,YAAYG,KAAK,IAAnC,qBAEF,cAACS,EAAA,EAAD,CAASZ,UAAU,WAAnB,SACE,cAACa,EAAA,EAAD,CAAQb,UAAU,YAAYG,KAAK,IAAnC,qBAEF,cAACS,EAAA,EAAD,CAASZ,UAAU,WAAnB,SACE,cAACa,EAAA,EAAD,CAAQb,UAAU,YAAYG,KAAK,IAAnC,+BAQN,eAACL,EAAA,EAAD,WACA,cAACgB,EAAA,EAAD,UACA,qBAAKd,UAAU,SAASxB,MAAO,CAAE6B,OAAQ,OAAQC,MAAO,SAAxD,SACA,cAAC,IAAD,CACES,iBAAkB,CAAEC,IAAK,IACzBC,cAAe9B,EAAaC,OAC5B8B,YAAa/B,EAAaI,KAH5B,SAKE,cAAC,EAAD,CACEF,IAAK,QACLC,KAAM,SACNf,KAAK,oBAKX,cAACuC,EAAA,EAAD,OAIA,wBAAOR,MAAM,QAAQa,QAAQ,KAAKzB,SAAS,OAAOD,MAAI,EAAC2B,OAAK,EAA5D,UACI,wBAAQC,IAAKC,EAAOC,KAAK,cAD7B,8DClFWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0bd27d5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pexels-rostislav-uzunov-5680034.8de3b1a8.mp4\";","import React from \"react\";\nimport './App.css';\nimport GoogleMapReact from 'google-map-react';\nimport { Navbar, NavbarBrand, NavItem, Button, Row, Col, Container } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Lottie from 'react-lottie';\nimport animationData from './Components/the-beautiful-birds-of-heart-valley';\nimport video from \"./pexels-rostislav-uzunov-5680034.mp4\";\n\nconst AnyReactComponent = ({ text }) => (\n  <div style={{\n    color: 'white', \n    background: 'grey',\n    padding: '15px 10px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nfunction App() {\n  const defaultProps = {\n    center: {\n      lat: 37.8272,\n      lng: -122.2913\n    },\n    zoom: 5\n  };\n  \n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  return (\n    <div>\n      <nav>\n        <Container>\n        <Navbar className='mynav' expand=\"md\">\n          \n          <NavbarBrand className=\"navbrand\" href=\"/\">Heart of the Valley</NavbarBrand>\n          <div className=\"my-lottie\">\n            <Lottie \n              options={defaultOptions}\n              height={400}\n              width={400}\n            />\n          </div>\n          <Col xs={6} sm={6} md={6} lg={3}>\n          <NavItem className='navitems'>\n            <Button className=\"navbutton\" href=\"/\">link </Button>\n          </NavItem>\n          <NavItem className='navitems'>\n            <Button className=\"navbutton\" href=\"/\">link </Button>\n          </NavItem>\n          <NavItem className='navitems'>\n            <Button className=\"navbutton\" href=\"/\">link </Button>\n          </NavItem>\n          </Col>\n        </Navbar>\n        </Container>\n      </nav>\n      \n\n      <Container>\n      <Row>\n      <div className='my-map' style={{ height: '70vw', width: '100vw' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"\" }}\n        defaultCenter={defaultProps.center}\n        defaultZoom={defaultProps.zoom}\n      >\n        <AnyReactComponent\n          lat={37.8272}\n          lng={-122.2913}\n          text=\"My Marker\"\n        />\n      </GoogleMapReact>\n    </div>\n    </Row>\n    <Row>\n    \n    </Row> \n    </Container>\n    <video width=\"100vw\" opacity=\"60\" autoplay=\"true\" loop muted >\n        <source src={video} type=\"video/mp4\" />\n\n          Sorry, your browser doesn't support embedded videos.\n      </video>  \n  </div>\n  \n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('main')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}